{
  "version": 3,
  "sources": ["../../../../../../node_modules/@awesome-cordova-plugins/sqlite-porter/ngx/index.js"],
  "sourcesContent": ["import { __decorate, __extends } from \"tslib\";\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nvar SQLitePorter = /** @class */function (_super) {\n  __extends(SQLitePorter, _super);\n  function SQLitePorter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SQLitePorter.prototype.importSqlToDb = function (db, sql) {\n    return cordova(this, \"importSqlToDb\", {\n      \"callbackStyle\": \"object\",\n      \"successName\": \"successFn\",\n      \"errorName\": \"errorFn\"\n    }, arguments);\n  };\n  SQLitePorter.prototype.exportDbToSql = function (db) {\n    return cordova(this, \"exportDbToSql\", {\n      \"callbackStyle\": \"object\",\n      \"successName\": \"successFn\",\n      \"errorName\": \"errorFn\"\n    }, arguments);\n  };\n  SQLitePorter.prototype.importJsonToDb = function (db, json) {\n    return cordova(this, \"importJsonToDb\", {\n      \"callbackStyle\": \"object\",\n      \"successName\": \"successFn\",\n      \"errorName\": \"errorFn\"\n    }, arguments);\n  };\n  SQLitePorter.prototype.exportDbToJson = function (db) {\n    return cordova(this, \"exportDbToJson\", {\n      \"callbackStyle\": \"object\",\n      \"successName\": \"successFn\",\n      \"errorName\": \"errorFn\"\n    }, arguments);\n  };\n  SQLitePorter.prototype.wipeDb = function (db) {\n    return cordova(this, \"wipeDb\", {\n      \"callbackStyle\": \"object\",\n      \"successName\": \"successFn\",\n      \"errorName\": \"errorFn\"\n    }, arguments);\n  };\n  SQLitePorter.ɵfac = /* @__PURE__ */(() => {\n    let ɵSQLitePorter_BaseFactory;\n    return function SQLitePorter_Factory(__ngFactoryType__) {\n      return (ɵSQLitePorter_BaseFactory || (ɵSQLitePorter_BaseFactory = i0.ɵɵgetInheritedFactory(SQLitePorter)))(__ngFactoryType__ || SQLitePorter);\n    };\n  })();\n  SQLitePorter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SQLitePorter,\n    factory: SQLitePorter.ɵfac\n  });\n  SQLitePorter.pluginName = \"SQLitePorter\";\n  SQLitePorter.plugin = \"uk.co.workingedge.cordova.plugin.sqliteporter\";\n  SQLitePorter.pluginRef = \"cordova.plugins.sqlitePorter\";\n  SQLitePorter.repo = \"https://github.com/dpa99c/cordova-sqlite-porter\";\n  SQLitePorter.platforms = [\"Amazon Fire OS\", \"Android\", \"BlackBerry 10\", \"Browser\", \"iOS\", \"Tizen\", \"Windows\", \"Windows Phone\"];\n  SQLitePorter = __decorate([], SQLitePorter);\n  return SQLitePorter;\n}(AwesomeCordovaNativePlugin);\nexport { SQLitePorter };\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SQLitePorter, [{\n    type: Injectable\n  }], null, {\n    importSqlToDb: [],\n    exportDbToSql: [],\n    importJsonToDb: [],\n    exportDbToJson: [],\n    wipeDb: []\n  });\n})();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAIA,IAAI;AAAA;AAAA,EAA4B,SAAU,QAAQ;AAChD,cAAUA,eAAc,MAAM;AAC9B,aAASA,gBAAe;AACtB,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,IAAAA,cAAa,UAAU,gBAAgB,SAAU,IAAI,KAAK;AACxD,aAAO,QAAQ,MAAM,iBAAiB;AAAA,QACpC,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,MACf,GAAG,SAAS;AAAA,IACd;AACA,IAAAA,cAAa,UAAU,gBAAgB,SAAU,IAAI;AACnD,aAAO,QAAQ,MAAM,iBAAiB;AAAA,QACpC,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,MACf,GAAG,SAAS;AAAA,IACd;AACA,IAAAA,cAAa,UAAU,iBAAiB,SAAU,IAAI,MAAM;AAC1D,aAAO,QAAQ,MAAM,kBAAkB;AAAA,QACrC,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,MACf,GAAG,SAAS;AAAA,IACd;AACA,IAAAA,cAAa,UAAU,iBAAiB,SAAU,IAAI;AACpD,aAAO,QAAQ,MAAM,kBAAkB;AAAA,QACrC,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,MACf,GAAG,SAAS;AAAA,IACd;AACA,IAAAA,cAAa,UAAU,SAAS,SAAU,IAAI;AAC5C,aAAO,QAAQ,MAAM,UAAU;AAAA,QAC7B,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,MACf,GAAG,SAAS;AAAA,IACd;AACA,IAAAA,cAAa,OAAuB,uBAAM;AACxC,UAAI;AACJ,aAAO,SAAS,qBAAqB,mBAAmB;AACtD,gBAAQ,8BAA8B,4BAA+B,sBAAsBA,aAAY,IAAI,qBAAqBA,aAAY;AAAA,MAC9I;AAAA,IACF,GAAG;AACH,IAAAA,cAAa,QAA0B,mBAAmB;AAAA,MACxD,OAAOA;AAAA,MACP,SAASA,cAAa;AAAA,IACxB,CAAC;AACD,IAAAA,cAAa,aAAa;AAC1B,IAAAA,cAAa,SAAS;AACtB,IAAAA,cAAa,YAAY;AACzB,IAAAA,cAAa,OAAO;AACpB,IAAAA,cAAa,YAAY,CAAC,kBAAkB,WAAW,iBAAiB,WAAW,OAAO,SAAS,WAAW,eAAe;AAC7H,IAAAA,gBAAe,WAAW,CAAC,GAAGA,aAAY;AAC1C,WAAOA;AAAA,EACT,EAAE,0BAA0B;AAAA;CAE3B,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM;AAAA,IACR,eAAe,CAAC;AAAA,IAChB,eAAe,CAAC;AAAA,IAChB,gBAAgB,CAAC;AAAA,IACjB,gBAAgB,CAAC;AAAA,IACjB,QAAQ,CAAC;AAAA,EACX,CAAC;AACH,GAAG;",
  "names": ["SQLitePorter"]
}
