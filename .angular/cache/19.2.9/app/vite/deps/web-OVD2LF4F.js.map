{
  "version": 3,
  "sources": ["../../../../../../node_modules/@capacitor-community/sqlite/dist/esm/web.js"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.jeepSqliteElement = null;\n    this.isWebStoreOpen = false;\n  }\n  async initWebStore() {\n    await customElements.whenDefined('jeep-sqlite');\n    this.jeepSqliteElement = document.querySelector('jeep-sqlite');\n    this.ensureJeepSqliteIsAvailable();\n    this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', event => {\n      this.notifyListeners('sqliteImportProgressEvent', event.detail);\n    });\n    this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', event => {\n      this.notifyListeners('sqliteExportProgressEvent', event.detail);\n    });\n    this.jeepSqliteElement.addEventListener('jeepSqliteHTTPRequestEnded', event => {\n      this.notifyListeners('sqliteHTTPRequestEndedEvent', event.detail);\n    });\n    this.jeepSqliteElement.addEventListener('jeepSqlitePickDatabaseEnded', event => {\n      this.notifyListeners('sqlitePickDatabaseEndedEvent', event.detail);\n    });\n    this.jeepSqliteElement.addEventListener('jeepSqliteSaveDatabaseToDisk', event => {\n      this.notifyListeners('sqliteSaveDatabaseToDiskEvent', event.detail);\n    });\n    if (!this.isWebStoreOpen) {\n      this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n    }\n    return;\n  }\n  async saveToStore(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.saveToStore(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getFromLocalDiskToStore(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.getFromLocalDiskToStore(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async saveToLocalDisk(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.saveToLocalDisk(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async echo(options) {\n    this.ensureJeepSqliteIsAvailable();\n    const echoResult = await this.jeepSqliteElement.echo(options);\n    return echoResult;\n  }\n  async createConnection(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.createConnection(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async open(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.open(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async closeConnection(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.closeConnection(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getVersion(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const versionResult = await this.jeepSqliteElement.getVersion(options);\n      return versionResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async checkConnectionsConsistency(options) {\n    this.ensureJeepSqliteIsAvailable();\n    try {\n      const consistencyResult = await this.jeepSqliteElement.checkConnectionsConsistency(options);\n      return consistencyResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async close(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.close(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async beginTransaction(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const changes = await this.jeepSqliteElement.beginTransaction(options);\n      return changes;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async commitTransaction(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const changes = await this.jeepSqliteElement.commitTransaction(options);\n      return changes;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async rollbackTransaction(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const changes = await this.jeepSqliteElement.rollbackTransaction(options);\n      return changes;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isTransactionActive(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const result = await this.jeepSqliteElement.isTransactionActive(options);\n      return result;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getTableList(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const tableListResult = await this.jeepSqliteElement.getTableList(options);\n      return tableListResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async execute(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const executeResult = await this.jeepSqliteElement.execute(options);\n      return executeResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async executeSet(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const executeResult = await this.jeepSqliteElement.executeSet(options);\n      return executeResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async run(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const runResult = await this.jeepSqliteElement.run(options);\n      return runResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async query(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const queryResult = await this.jeepSqliteElement.query(options);\n      return queryResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isDBExists(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const dbExistsResult = await this.jeepSqliteElement.isDBExists(options);\n      return dbExistsResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isDBOpen(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const isDBOpenResult = await this.jeepSqliteElement.isDBOpen(options);\n      return isDBOpenResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isDatabase(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const isDatabaseResult = await this.jeepSqliteElement.isDatabase(options);\n      return isDatabaseResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isTableExists(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const tableExistsResult = await this.jeepSqliteElement.isTableExists(options);\n      return tableExistsResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async deleteDatabase(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.deleteDatabase(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async isJsonValid(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const isJsonValidResult = await this.jeepSqliteElement.isJsonValid(options);\n      return isJsonValidResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async importFromJson(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const importFromJsonResult = await this.jeepSqliteElement.importFromJson(options);\n      return importFromJsonResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async exportToJson(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const exportToJsonResult = await this.jeepSqliteElement.exportToJson(options);\n      return exportToJsonResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async createSyncTable(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const createSyncTableResult = await this.jeepSqliteElement.createSyncTable(options);\n      return createSyncTableResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async setSyncDate(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.setSyncDate(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getSyncDate(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const getSyncDateResult = await this.jeepSqliteElement.getSyncDate(options);\n      return getSyncDateResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async deleteExportedRows(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.deleteExportedRows(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async addUpgradeStatement(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.addUpgradeStatement(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async copyFromAssets(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.copyFromAssets(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getFromHTTPRequest(options) {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      await this.jeepSqliteElement.getFromHTTPRequest(options);\n      return;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  async getDatabaseList() {\n    this.ensureJeepSqliteIsAvailable();\n    this.ensureWebstoreIsOpen();\n    try {\n      const databaseListResult = await this.jeepSqliteElement.getDatabaseList();\n      return databaseListResult;\n    } catch (err) {\n      throw new Error(`${err}`);\n    }\n  }\n  /**\n   * Checks if the `jeep-sqlite` element is present in the DOM.\n   * If it's not in the DOM, this method throws an Error.\n   *\n   * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\n   */\n  ensureJeepSqliteIsAvailable() {\n    if (this.jeepSqliteElement === null) {\n      throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\n    }\n  }\n  ensureWebstoreIsOpen() {\n    if (!this.isWebStoreOpen) {\n      /**\n       * if (!this.isWebStoreOpen)\n        this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n       */\n      throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\n    }\n  }\n  ////////////////////////////////////\n  ////// UNIMPLEMENTED METHODS\n  ////////////////////////////////////\n  async getUrl() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async getMigratableDbList(options) {\n    console.log('getMigratableDbList', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async addSQLiteSuffix(options) {\n    console.log('addSQLiteSuffix', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async deleteOldDatabases(options) {\n    console.log('deleteOldDatabases', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async moveDatabasesAndAddSuffix(options) {\n    console.log('moveDatabasesAndAddSuffix', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async isSecretStored() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async setEncryptionSecret(options) {\n    console.log('setEncryptionSecret', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async changeEncryptionSecret(options) {\n    console.log('changeEncryptionSecret', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async clearEncryptionSecret() {\n    console.log('clearEncryptionSecret');\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async checkEncryptionSecret(options) {\n    console.log('checkEncryptionPassPhrase', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async getNCDatabasePath(options) {\n    console.log('getNCDatabasePath', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async createNCConnection(options) {\n    console.log('createNCConnection', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async closeNCConnection(options) {\n    console.log('closeNCConnection', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async isNCDatabase(options) {\n    console.log('isNCDatabase', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async isDatabaseEncrypted(options) {\n    console.log('isDatabaseEncrypted', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async isInConfigEncryption() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async isInConfigBiometricAuth() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async loadExtension(options) {\n    console.log('loadExtension', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n  async enableLoadExtension(options) {\n    console.log('enableLoadExtension', options);\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
